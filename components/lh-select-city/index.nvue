<template>
	<view class="select-city-wrap" :style="'height:' + windowHeight">
		<view style="display: flex;width: 100%;height: 80upx;background-color: #2f9bfe;font-size: 30upx;">
			<view style="flex-direction: row;width: 50%;margin-left: 20upx;margin-top: 20upx;color: #d5ebff;">XX平台</view>
			<view style="flex-direction: row;width: 50%;margin-left: 430upx;margin-top: 20upx;color: #d5ebff;" @click="gotoLogin()">登录/注册</view>
		</view>
		<!-- 内容 -->
		<scroll-view class="scroll" :scroll-into-view="scrollIntoId" :scroll-y="true" :scroll-with-animation="true" :show-scrollbar="false" :style="'height:' + windowHeight">
			<!-- 当前城市 -->
			<view style="height:150rpx">
				<text class="name" id="current">当前定位城市（定位不准时，请在城市列表中选择）</text>
				<view class="city-item" v-if="city" @click="onSelect(city)">
					<view class="city-item-view">
						<text class="city-item-text">{{ city }}</text>
					</view>
				</view>
			</view>

			<!-- 热门城市 -->
			<text class="name">热门城市</text>
			<view class="city-item">
				<view :class="city == cityname.name ? 'city-item-viewa' : 'city-item-view'" v-for="(cityname, i) in hotCitys" :key="cityname.name" @click="onSelect(cityname)">
					<text :class="city == cityname.name ? 'city-item-texta' : 'city-item-text'">{{ cityname.name }}</text>
				</view>
			</view>
			<view v-for="(item, index) in anchorArr" :key="item">
				<view :id="item">
					<!-- ABCD -->
					<text class="letter" style="padding: 0 10upx;">{{item}}</text>
					<!-- 城市 -->
					<view class="city-item">
						<view :class="city == cityname.name ? 'city-item-viewa' : 'city-item-view'" v-for="(cityname, i) in cityData[item]" :key="cityname.name" @click="onSelect(cityname)">
							<text :class="city == cityname.name ? 'city-item-texta' : 'city-item-text'" class="ppp" >{{ cityname.name }}</text>
						</view>
					</view>
				</view>
			</view>
			
		
			
		</scroll-view>

		<!-- 右边锚点 -->
		<view class="anchor" @touchstart="start" @touchmove="move" @touchend="end" v-if="sliding" style="margin-left: 10upx;">
			<!-- <view >
				<view class="anchor-item" ><text v-if=" slidingChoice == 'current' " class="anchor-text">#</text></view>
				<view class="anchor-item" v-for="(item,index) in anchorArr" :key="item"  >
					<text class="anchor-text-position" v-if=" slidingChoice==item ">{{item}}啊啊啊啊</text>
				</view>
			</view> -->
			<view>
				<view class="anchor-item" @click="scrollIntoId = 'current'"><text class="anchor-text">#</text></view>
				<view class="anchor-item" v-for="(item, index) in anchorArr" :key="item" @click="scrollIntoId = item">
					<text class="anchor-text">{{ item }}</text>
				</view>
			</view>
		</view>
		<view class="anchor" v-else>
			<view>
				<view class="anchor-item" @click="scrollIntoId = 'current'"><text class="anchor-text">#</text></view>
				<view class="anchor-item" v-for="(item, index) in anchorArr" :key="item" @click="scrollIntoId = item">
					<text class="anchor-text">{{ item }}</text>
				</view>
			</view>
		</view>
	</view>
</template>
<script>
// hotCitys  热门城市
// value 当前选中城市
// windowHeight  scroll的高 也是滑块的高 记得带单位!!! px rpx upx都支持
// sliding 是否开始滑动选择 默认开启  false true
// @onSelect   点击切换城市事件 参数为城市名称
import cityData from './cityData.js';
import { $fetch_v1_city_group,$fetch_v1_city_guess,$fetch_v1_city_hot } from '../../apis/ryl-port.js';
let anchorArr = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'W', 'X', 'Y', 'Z'];
export default {
	props: {
		// hotCitys: {
		// 	type: Array,
		// 	default() {
		// 		return [];
		// 	}
		// },
		value: {
			type: String
		},
		windowHeight: {
			type: String
		},
		// 开启滑动选择
		sliding: {
			type: Boolean,
			default: true
		}
	},
	data() {
		return {
			cityData,
			scrollIntoId: '',
			hotCitys:[],
			city: this.value,
			anchorArr,
			// 滑动中选中的具体值
			slidingChoice: '',
			//开始滑动位置
			startY: '',
			// 滑动中当前选中下标
			downIndex: -1
		};
	},
	computed: {},
	created() {
		$fetch_v1_city_group().then(res=>{
			// this.data = res.data
			// console.log(JSON.stringify(res.data.A))
			this.cityData=res.data
		})
		// $fetch_v1_city_guess().then(guessRes=>{
		// 	// this.data = res.data
		// 	// console.log(JSON.stringify(guessRes.data))
		// 	this.city=guessRes.data.name
		// })
		$fetch_v1_city_hot().then(hotRes=>{
			// this.data = res.data
			console.log(JSON.stringify(hotRes.data))
			 this.hotCitys=hotRes.data
		})
		
		
		
		
	},
	mounted() {},
	onLoad() {
		// console.log("jjjj")
		
	},
	methods: {
		gotoLogin(){
			uni.navigateTo({
				url:'/pages/pub/login/login'
			})
		},
		
		// 点击城市
		onSelect(city) {
			console.log(city)
			// this.city = city;
			// this.$emit('onSelect', city);
			// let content = {
			// 	id: 123,
			// 	title: '文章',
			// 	createTime:'2021-12-23'
			// }
			// uni.navigateTo({
			// 	url: '/pages/strategy/fx?content=' + JSON.stringify(content)
			// })
			uni.navigateTo({
				url:'../pub/mapDetails/mapDetails?city=' + JSON.stringify(city),
				
			})
		},
		// 开始滑动
		start(e) {
			// console.log("开始滑动",e);
			// #ifdef MP
			let eY = e.changedTouches[0].clientY;
			// #endif
			// #ifdef APP-PLUS
			let eY = e.changedTouches[0].screenY;
			// #endif
			this.startY = eY;
			// 计算点击时候下标
			let index = eY / (uni.upx2px(eY) / eY);
			index = parseInt((index - 200) / 40) - 1;
			this.downIndex = index;
		},
		// 开始移动
		move(e) {
			// console.log("开始移动",e);
			// #ifdef MP
			let downY = e.changedTouches[0].clientY;
			// #endif
			// #ifdef APP-PLUS
			let downY = e.changedTouches[0].screenY;
			// #endif

			let gap = this.startY - downY;
			let index = parseInt(gap / (uni.upx2px(gap) / gap) / 40);
			// 选中下标
			let optforIndex = this.downIndex - index;
			if (optforIndex < -1) {
				optforIndex = -1;
			} else if (optforIndex > 21) {
				optforIndex = 21;
			}
			this.slidingChoice = this.anchorArr[optforIndex];
			this.scrollIntoId = this.anchorArr[optforIndex];
		},
		// 滑动结束
		end(e) {
			// console.log("结束滑动",e)
			this.slidingChoice = '';
		}
	}
};
</script>

<style scoped>
	.ppp {
		width: 130upx; /*定义块元素的宽度*/
		/* max-height: 25upx; */
		white-space: nowrap; /*内容超宽后禁止换行显示*/
		overflow: hidden; /*超出部分隐藏*/
		text-overflow: ellipsis; /*文字超出部分以省略号显示*/
	}
.select-city-wrap {
	overflow: hidden;
}
/* 滑块 */
.scroll {
	/* background-color: yellow; */
}
.name {
	color: #333;
	font-size: 28rpx;
	margin: 30rpx 30rpx;
}
/* 城市 */
.letter {
	width: 60rpx;
	height: 44rpx;
	color: #fff;
	border-radius: 22rpx;
	background-color: #2f9bfe;
	font-size: 28rpx;
	line-height: 44rpx;
	text-align: center;
	margin-bottom: 30rpx;
	margin-left: 30rpx;
}
.city-item {
	flex-wrap: wrap;
	flex-direction: row;
	margin-left: 20rpx;
	display: flex;
}
.city-item-view {
	width: 130rpx;
	height: 55rpx;
	margin: 15rpx;
	border: 1rpx solid #dcdcdc;
	border-radius: 6rpx;
	justify-content: center;
	align-items: center;
	display: flex;
	background-color: #ffffff;
	/* 	background-color: #d5ebff;
	border-color: #2f9bfe; */
}
.city-item-viewa {
	width: 130rpx;
	height: 55rpx;
	margin: 15rpx;
	border: 1rpx solid #2f9bfe;
	border-radius: 6rpx;
	justify-content: center;
	align-items: center;
	background-color: #d5ebff;
	display: flex;
	text-align: center;
	align-item: center;
	justify-content: center;
}
.city-item-text {
	color: #999;
	font-size: 28rpx;
	display: flex;
	text-align: center;
	align-item: center;
	justify-content: center;
}

.city-item-texta {
	font-size: 28rpx;
	color: #2f9bfe;
	text-align: center;
}

/* 右锚点 */
.anchor {
	/* background-color: pink; */
	position: fixed;
	right: 20rpx;
	top: 200rpx;
	z-index: 10;
	flex-direction: row;
}

.anchor-item {
	align-items: center;
	flex-direction: row;
	height: 40rpx;
	text-align: center;
}

.anchor-text-position {
	height: 40rpx;
	width: 40rpx;
	text-align: center;
	line-height: 40rpx;
	font-size: 32rpx;
	color: #333;
	background-color: #e5e5e5;
	border-radius: 20rpx;
}
.anchor-text {
	font-size: 32rpx;
	line-height: 40rpx;
	padding: 0 15rpx;
	color: #2f9bfe;
}
</style>
